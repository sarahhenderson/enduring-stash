/*! enduring-stash 09-11-2013 */
!function() {
    "use strict";
    var enduring = window.enduring || void 0;
    if (!enduring) throw "Enduring Stash: Enduring Stash is missing!";
    var Cookie = function() {};
    Cookie.prototype.get = function(key, promise) {
        var match = document.cookie.match("(^|;) ?" + key + "=([^;]*)(;|$)");
        match ? promise.resolve(this.unstringify(decodeURIComponent(match[2]))) : promise.resolve(void 0);
    }, Cookie.prototype.getAll = function(key, promise) {
        for (var pairs = document.cookie.split(";"), len = pairs.length, cookies = [], i = 0; len > i; i++) {
            var pair = pairs[i].split("="), itemKey = pair[0].trim();
            "" !== itemKey && itemKey.substring(0, key.length) === key && cookies.push(this.unstringify(decodeURIComponent(pair[1])));
        }
        promise.resolve(cookies);
    }, Cookie.prototype.set = function(key, value, promise) {
        var cookieStr = key + "=" + encodeURIComponent(this.stringify(value));
        document.cookie = cookieStr, promise.resolve(value);
    }, Cookie.prototype.add = function(key, value, promise) {
        var match = document.cookie.match("(^|;) ?" + key + "=([^;]*)(;|$)");
        return match ? (promise.reject("Item already exists"), void 0) : this.set(key, value, promise);
    }, Cookie.prototype.update = function(key, value, promise) {
        var match = document.cookie.match("(^|;) ?" + key + "=([^;]*)(;|$)");
        return match ? this.set(key, value, promise) : (promise.reject("Item does not exist"), 
        void 0);
    }, Cookie.prototype.remove = function(key, promise) {
        var expiry = new Date();
        expiry.setTime(expiry.getTime() - 1), document.cookie = key += "=; expires=" + expiry.toUTCString(), 
        promise.resolve();
    }, Cookie.prototype.contains = function(key, promise) {
        var match = document.cookie.match("(^|;) ?" + key + "=([^;]*)(;|$)");
        match ? promise.resolve(!0) : promise.resolve(!1);
    }, Cookie.prototype.removeAll = function(promise) {
        try {
            for (var pairs = document.cookie.split(";"), len = pairs.length, i = 0; len > i; i++) {
                var pair = pairs[i].split("="), expiry = new Date();
                expiry.setTime(expiry.getTime() - 1), document.cookie = pair[0] += "=; expires=" + expiry.toUTCString();
            }
            promise.resolve();
        } catch (e) {
            promise.reject(e);
        }
    }, enduring.provider.registerProvider("Cookie", Cookie);
}();